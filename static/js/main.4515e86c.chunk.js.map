{"version":3,"sources":["pages/audrius/exercise-table.tsx","pages/audrius/audrius-page.tsx","pages/audrius/training-day-1.ts","pages/audrius/training-day-2.ts","pages/audrius/training-day-3.ts","components/days-lessons/days-lessons.style.ts","components/days-lessons/utils.ts","components/days-lessons/lesson-row.tsx","components/days-lessons/days-lessons.tsx","components/week-lessons/week-lessons.tsx","pages/darius/darius-page.tsx","pages/gabija/gabija-page.tsx","pages/navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ExerciseTable","rowData","data","map","r","className","muscleGroup","exercise","series","t","trainingData","buttonPreviousStyle","marginRight","padding","buttonNextStyle","marginLeft","dayAnnotationStyle","userSelect","AudriusPage","useState","index","setIndex","style","onClick","prev","length","tableStyle","borderCollapse","tableItem","border","paddingLeft","paddingRight","paddingTop","paddingBottom","lessonTime","fontSize","dayOfWeek","borderTop","borderLeft","borderRight","textAlign","fontWeight","background","getBackground","activeLessonStatus","activeDayOfWeek","activeLessonIndex","status","lessonTimes","startHour","startMinute","endHour","endMinute","formatMinute","minute","getLessonStart","lesson","now","Date","getFullYear","getMonth","getDate","getTime","getLessonEnd","getActiveLessonStatus","lessonStart","lessonEnd","time","timeLeft","remainMinutes","Math","round","lessonAfterStart","LessonRow","lecture","lectureTimeStyle","getLessonTimeStyle","lectureStyle","getLectureStyle","lectureTime","makeLessonTime","remainTime","color","undefined","DaysLessons","lessons","activeLessons","getDayOfWeek","dayOfWeekStyle","getDayOfWeekStyle","width","WeekLessons","monday","tuesday","wednesday","thursday","friday","dow","getDay","setActiveLessonStatus","useEffect","setInterval","activeLesson","console","log","marginTop","display","flexWrap","gridRowGap","gridColumnGap","DariusPage","GabijaPage","styling","borderRadius","links","Navigation","history","useHistory","push","Notfound","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAOaA,EAAgB,SAAC,GAAkC,IACxDC,EADuD,EAA/BC,KACTC,KAAI,SAACC,GAAD,OACvB,+BACE,oBAAIC,UAAU,QAAd,SAAuBD,EAAEE,cACzB,oBAAID,UAAU,QAAd,SAAuBD,EAAEG,WACzB,oBAAIF,UAAU,QAAd,SACGD,EAAEI,OAAOL,KAAI,SAACM,GAAD,OACZ,8BAAMA,eAKd,OACE,wBAAOJ,UAAU,aAAjB,UACE,kCACE,oBAAIA,UAAU,cAAd,qCACA,oBAAIA,UAAU,cAAd,sBACA,oBAAIA,UAAU,cAAd,qCAEF,gCAAQJ,QCpBRS,EAAe,CCJY,CAC/B,CACEJ,YAAa,iBACbC,SAAU,cACVC,OAAQ,CAAC,UAEX,CACEF,YAAa,SACbC,SAAU,4DACVC,OAAQ,CAAC,SAEX,CACEF,YAAa,eACbC,SAAU,wCACVC,OAAQ,CAAC,aAAc,YAAa,YAAa,cAEnD,CACEF,YAAa,oBACbC,SAAU,sEACVC,OAAQ,CAAC,aAAc,eAEzB,CACEF,YAAa,SACbC,SAAU,8CACVC,OAAQ,CAAC,eAEX,CACEF,YAAa,SACbC,SAAU,gDACVC,OAAQ,CAAC,eAEX,CACEF,YAAa,WACbC,SAAU,iDACVC,OAAQ,CAAC,YAAa,gBClCO,CAC/B,CACEF,YAAa,iBACbC,SAAU,WACVC,OAAQ,CAAC,UAEX,CACEF,YAAa,SACbC,SAAU,sCACVC,OAAQ,CAAC,SAEX,CACEF,YAAa,QACbC,SAAU,uBACVC,OAAQ,CAAC,eAEX,CACEF,YAAa,QACbC,SAAU,kBACVC,OAAQ,CAAC,eAEX,CACEF,YAAa,QACbC,SAAU,yDACVC,OAAQ,CAAC,oBAEX,CACEF,YAAa,QACbC,SAAU,6BACVC,OAAQ,CAAC,eAEX,CACEF,YAAa,QACbC,SAAU,YACVC,OAAQ,CAAC,eAEX,CACEF,YAAa,WACbC,SAAU,yCACVC,OAAQ,CAAC,YAAa,WAAY,WAAY,WAAY,cCvC7B,CAC/B,CACEF,YAAa,iBACbC,SAAU,cACVC,OAAQ,CAAC,UAEX,CACEF,YAAa,SACbC,SAAU,mDACVC,OAAQ,CAAC,SAEX,CACEF,YAAa,SACbC,SACE,2GACFC,OAAQ,CAAC,aAAc,eAEzB,CACEF,YAAa,cACbC,SAAU,6DACVC,OAAQ,CAAC,YAAa,eAExB,CACEF,YAAa,cACbC,SACE,4GACFC,OAAQ,CAAC,eAEX,CACEF,YAAa,YACbC,SACE,qFACFC,OAAQ,CAAC,aAAc,aAAc,oBH1BnCG,EAAqC,CACzCC,YAAa,OACbC,QAAS,UAGLC,EAAiC,CACrCC,WAAY,OACZF,QAAS,UAGLG,EAAoC,CACxCD,WAAY,OACZH,YAAa,OACbK,WAAY,QAGDC,EAAc,WAAO,IAAD,EACLC,mBAAS,GADJ,mBACxBC,EADwB,KACjBC,EADiB,KAkB/B,OACE,qCACE,wBAAQC,MAAOX,EAAqBY,QAVtB,kBAChBF,GAAS,SAACG,GACR,OAAa,IAATA,EACKd,EAAae,OAAS,EAExBD,EAAO,MAKd,SACG,MAEH,uBAAMF,MAAON,EAAb,UAAkCI,EAAQ,EAA1C,YACA,wBAAQE,MAAOR,EAAiBS,QAtBlB,kBAChBF,GAAS,SAACG,GACR,OAAIA,IAASd,EAAae,OAAS,EAC1B,EAEFD,EAAO,MAiBd,SACG,MAGH,cAAC,EAAD,CAAetB,KAAMQ,EAAaU,S,OIjD3BM,EAA4B,CACvCC,eAAgB,YAGZC,EAA2B,CAC/BC,OAAQ,kBACRC,YAAa,SACbC,aAAc,SACdC,WAAY,UACZC,cAAe,UACfhB,WAAY,QAGRiB,EAAyB,2BAC1BN,GAD0B,IAE7BO,SAAU,KAGNC,EAA2B,CAC/BC,UAAW,kBACXC,WAAY,kBACZC,YAAa,kBACb1B,QAAS,UACT2B,UAAW,SACXL,SAAU,GACVM,WAAY,OACZC,WAAY,UACZzB,WAAY,QAqBd,SAAS0B,EACPC,EACAC,EACAzB,GAEA,OAAKyB,GAIgBD,EAAmBE,oBAAsB1B,EAK5B,WAA9BwB,EAAmBG,OACd,aAEF,cAXE,QClDJ,IAAMC,EAA4B,CACvC,CAAEC,UAAW,EAAGC,YAAa,EAAGC,QAAS,EAAGC,UAAW,IACvD,CAAEH,UAAW,EAAGC,YAAa,GAAIC,QAAS,EAAGC,UAAW,IACxD,CAAEH,UAAW,EAAGC,YAAa,GAAIC,QAAS,GAAIC,UAAW,IACzD,CAAEH,UAAW,GAAIC,YAAa,EAAGC,QAAS,GAAIC,UAAW,IACzD,CAAEH,UAAW,GAAIC,YAAa,GAAIC,QAAS,GAAIC,UAAW,IAC1D,CAAEH,UAAW,GAAIC,YAAa,EAAGC,QAAS,GAAIC,UAAW,KAU3D,SAASC,EAAaC,GACpB,OAAOA,EAAS,EAAT,UAAgBA,GAAhB,WAA+BA,GA0BxC,SAASC,EAAeC,EAAoBC,GAC1C,OAAO,IAAIC,KACTD,EAAIE,cACJF,EAAIG,WACJH,EAAII,UACJL,EAAOP,UACPO,EAAON,aACPY,UAGJ,SAASC,EAAaP,EAAoBC,GACxC,OAAO,IAAIC,KACTD,EAAIE,cACJF,EAAIG,WACJH,EAAII,UACJL,EAAOL,QACPK,EAAOJ,WACPU,UAGG,SAASE,EAAsBP,GACpC,IAAK,IAAIrC,EAAQ,EAAGA,EAAQ4B,EAAYvB,OAAQL,IAAS,CACvD,IAAMc,EAAac,EAAY5B,GACzB6C,EAAcV,EAAerB,EAAYuB,GACzCS,EAAYH,EAAa7B,EAAYuB,GAErCU,EAAOV,EAAIK,UACjB,GAAIK,GAAQF,GAAeE,GAAQD,EAGjC,MAAO,CAAEpB,kBAAmB1B,EAAO2B,OAAQ,SAAUqB,SADvC,mBADSD,EAAOD,GAAa,IAC7B,cAIhB,GAAIC,EAAOF,EAAa,CACtB,IAAMI,EAAgBC,KAAKC,OAAON,EAAcE,GAAQ,KAExD,MAAO,CAAErB,kBAAmB1B,EAAO2B,OAAQ,WAAYqB,SADzC,iBAAaC,EAAb,cAIhB,GAAIjD,EAAQ4B,EAAYvB,OAAS,EAAG,CAClC,IACM+C,EAAmBjB,EADLP,EAAY5B,EAAQ,GACaqC,GACrD,GAAIU,EAAOK,EAAkB,CAC3B,IAAMH,EAAgBC,KAAKC,OAAOC,EAAmBL,GAAQ,KAE7D,MAAO,CAAErB,kBAAmB1B,EAAQ,EAAG2B,OAAQ,WAAYqB,SAD7C,iBAAaC,EAAb,gBAKpB,MAAO,CAAEvB,mBAAoB,EAAGC,OAAQ,YCzFnC,IAAM0B,EAAY,SAAC,GAKH,IAJrBrD,EAIoB,EAJpBA,MACAwB,EAGoB,EAHpBA,mBACAC,EAEoB,EAFpBA,gBACA6B,EACoB,EADpBA,QAEMxC,EAAac,EAAY5B,GAEzBuD,EFeD,SACL/B,EACAC,EACAzB,GAEA,IAAMsB,EAAaC,EAAcC,EAAoBC,EAAiBzB,GACtE,OAAO,2BAAKc,GAAZ,IAAwBQ,eErBCkC,CACvBhC,EACAC,EACAzB,GAEIyD,EFmBD,SACLjC,EACAC,EACAzB,GAEA,IAAMsB,EAAaC,EAAcC,EAAoBC,EAAiBzB,GACtE,OAAO,2BAAKQ,GAAZ,IAAuBc,eEzBFoC,CACnBlC,EACAC,EACAzB,GAGI2D,EDbD,SAAwB7C,GAAyB,IAC9Ce,EAA+Cf,EAA/Ce,UAAWE,EAAoCjB,EAApCiB,QAASD,EAA2BhB,EAA3BgB,YAAaE,EAAclB,EAAdkB,UACzC,MAAM,GAAN,OAAUH,EAAV,YAAuBI,EAAaH,GAApC,cAAsDC,EAAtD,YAAiEE,EAC/DD,ICUkB4B,CAAe9C,GAC7B+C,EACJrC,EAAmBE,oBAAsB1B,GACzCyB,GACAD,EAAmBwB,SACjB,sBACE9C,MAAO,CACL4D,MAAO,OAFX,oBAIMtC,EAAmBwB,iBACvBe,EACN,OACE,+BACE,oBAAI7D,MAAOqD,EAAX,SAA8BI,IAC9B,qBAAIzD,MAAOuD,EAAX,UACGH,EACAO,OAJI7D,IC1BAgE,EAAc,SAAC,GAIH,IAHvBC,EAGsB,EAHtBA,QACAzC,EAEsB,EAFtBA,mBACAC,EACsB,EADtBA,gBAEMyC,EAAgBD,EAAQA,QAAQlF,KAAI,SAACuE,EAAStD,GAAV,OACxC,cAAC,EAAD,CACEyB,gBAAiBA,EACjBD,mBAAoBA,EACpBxB,MAAOA,EACPsD,QAASA,OAIPtC,EFFD,SAAsBA,GAC3B,OAAQA,GACN,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAO,iBACT,KAAK,EACH,MAAO,eACT,QACE,MAAO,IEXOmD,CAAaF,EAAQjD,WACjCoD,EHyCD,SAA2B3C,GAChC,IAAMH,EAAaG,EAAkB,UAAY,YACjD,OAAO,2BAAKT,GAAZ,IAAuBM,eG3CA+C,CAAkB5C,GACzC,OACE,sBAAKvB,MAAO,CAAEoE,MAAO,eAArB,UACE,qBAAKpE,MAAOkE,EAAZ,SAA6BpD,IAC7B,uBAAOd,MAAOI,EAAd,SACE,gCAAQ4D,UCvBHK,EAAc,SAAC,GAMH,IALvBC,EAKsB,EALtBA,OACAC,EAIsB,EAJtBA,QACAC,EAGsB,EAHtBA,UACAC,EAEsB,EAFtBA,SACAC,EACsB,EADtBA,OAIMvC,EAAM,IAAIC,KACVuC,EAAMxC,EAAIyC,SAJM,EAK8B/E,mBAClD6C,EAAsBP,IANF,mBAKfb,EALe,KAKKuD,EALL,KAkBtB,OATAC,qBAAU,WACRC,aAAY,WACV,IACMC,EAAetC,EADN,IAAIN,MAEnByC,EAAsBG,GACtBC,QAAQC,IAAI,uBACX,OACF,IAGD,sBACElF,MAAO,CACLP,WAAY,SACZ0F,UAAW,SACXC,QAAS,OACTC,SAAU,OACVC,WAAY,OACZC,cAAe,QAPnB,UAUE,cAAC,EAAD,CACExB,QAASO,EACThD,mBAAoBA,EACpBC,gBAAiBoD,IAAQL,EAAOxD,YAElC,cAAC,EAAD,CACEiD,QAASQ,EACTjD,mBAAoBA,EACpBC,gBAAiBoD,IAAQJ,EAAQzD,YAEnC,cAAC,EAAD,CACEiD,QAASS,EACTlD,mBAAoBA,EACpBC,gBAAiBoD,IAAQH,EAAU1D,YAErC,cAAC,EAAD,CACEiD,QAASU,EACTnD,mBAAoBA,EACpBC,gBAAiBoD,IAAQF,EAAS3D,YAEpC,cAAC,EAAD,CACEiD,QAASW,EACTpD,mBAAoBA,EACpBC,gBAAiBoD,IAAQD,EAAO5D,gBCnElCwD,EAAqB,CACzBxD,UAAW,EACXiD,QAAS,CACP,sBACA,SACA,sBACA,aACA,4BAIEQ,EAAsB,CAC1BzD,UAAW,EACXiD,QAAS,CACP,sBACA,yBACA,sBACA,aACA,gCAIES,EAAwB,CAC5B1D,UAAW,EACXiD,QAAS,CACP,sBACA,yBACA,sBACA,aACA,iBAIEU,EAAuB,CAC3B3D,UAAW,EACXiD,QAAS,CAAC,sBAAkB,UAAW,aAAc,4BAGjDW,EAAqB,CACzB5D,UAAW,EACXiD,QAAS,CACP,sBACA,yBACA,8BACA,WAISyB,EAAa,WACxB,OACE,cAAC,EAAD,CACElB,OAAQA,EACRC,QAASA,EACTC,UAAWA,EACXC,SAAUA,EACVC,OAAQA,KCvDRJ,EAAqB,CACzBxD,UAAW,EACXiD,QAAS,CACP,kBACA,mBACA,aACA,sBACA,4BAIEQ,EAAsB,CAC1BzD,UAAW,EACXiD,QAAS,CACP,sBACA,aACA,sBACA,SACA,gCAIES,EAAwB,CAC5B1D,UAAW,EACXiD,QAAS,CACP,eACA,mBACA,aACA,sBACA,wBAIEU,EAAuB,CAC3B3D,UAAW,EACXiD,QAAS,CACP,sBACA,aACA,sBACA,0BACA,gCAIEW,EAAqB,CACzB5D,UAAW,EACXiD,QAAS,CACP,sBACA,aACA,sBACA,SACA,oBAIS0B,EAAa,kBACxB,cAAC,EAAD,CACEnB,OAAQA,EACRC,QAASA,EACTC,UAAWA,EACXC,SAAUA,EACVC,OAAQA,KC7DNgB,EAAyB,CAC7BjG,WAAY,SACZF,QAAS,OACTgB,OAAQ,kBACRa,WAAY,aACZuE,aAAc,MACdhG,WAAY,QAGRiG,EAAQ,CAAC,SAAU,SAAU,WAEtBC,EAAa,WACxB,IAAMC,EAAUC,cAChB,OACE,qBAAK/F,MAAO,CAAEmF,UAAW,UAAzB,SACGS,EAAM/G,KAAI,SAACC,GAAD,OACT,sBAAMkB,MAAO0F,EAASzF,QAAS,kBAAM6F,EAAQE,KAAR,WAAiBlH,KAAtD,SACGA,UCdX,SAASmH,IACP,OAAO,iDAGM,SAASC,IACtB,OACE,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAM,IAAb,SACE,cAACJ,EAAD,WCzBV,IAYeK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4515e86c.chunk.js","sourcesContent":["import { SportData } from \"./sport-data\";\nimport \"./SportPage.css\";\n\ninterface ExerciseTableProps {\n  data: SportData[];\n}\n\nexport const ExerciseTable = ({ data }: ExerciseTableProps) => {\n  const rowData = data.map((r) => (\n    <tr>\n      <td className=\"sport\">{r.muscleGroup}</td>\n      <td className=\"sport\">{r.exercise}</td>\n      <td className=\"sport\">\n        {r.series.map((t) => (\n          <div>{t}</div>\n        ))}\n      </td>\n    </tr>\n  ));\n  return (\n    <table className=\"tableSport\">\n      <thead>\n        <th className=\"sportHeader\">Raumenų grupė</th>\n        <th className=\"sportHeader\">Pratimas</th>\n        <th className=\"sportHeader\">Serijos / Kartojimai</th>\n      </thead>\n      <tbody>{rowData}</tbody>\n    </table>\n  );\n};\n","import { data as day1 } from \"./training-day-1\";\nimport { data as day2 } from \"./training-day-2\";\nimport { data as day3 } from \"./training-day-3\";\nimport { ExerciseTable } from \"./exercise-table\";\nimport { CSSProperties, useState } from \"react\";\n\nconst trainingData = [day1, day2, day3];\n\nconst buttonPreviousStyle: CSSProperties = {\n  marginRight: \"1rem\",\n  padding: \"0.5rem\",\n};\n\nconst buttonNextStyle: CSSProperties = {\n  marginLeft: \"1rem\",\n  padding: \"0.5rem\",\n};\n\nconst dayAnnotationStyle: CSSProperties = {\n  marginLeft: \"4rem\",\n  marginRight: \"4rem\",\n  userSelect: \"none\",\n};\n\nexport const AudriusPage = () => {\n  const [index, setIndex] = useState(0);\n  const nextIndex = () =>\n    setIndex((prev) => {\n      if (prev === trainingData.length - 1) {\n        return 0;\n      }\n      return prev + 1;\n    });\n\n  const prevIndex = () =>\n    setIndex((prev) => {\n      if (prev === 0) {\n        return trainingData.length - 1;\n      }\n      return prev - 1;\n    });\n\n  return (\n    <>\n      <button style={buttonPreviousStyle} onClick={prevIndex}>\n        {\"<\"}\n      </button>\n      <span style={dayAnnotationStyle}>{index + 1} diena</span>\n      <button style={buttonNextStyle} onClick={nextIndex}>\n        {\">\"}\n      </button>\n\n      <ExerciseTable data={trainingData[index]} />\n    </>\n  );\n};\n","import { SportData } from \"./sport-data\";\n\nexport const data: SportData[] = [\n  {\n    muscleGroup: \"Apšilimas\",\n    exercise: \"Ėjimas\",\n    series: [\"5 min\"],\n  },\n  {\n    muscleGroup: \"Presas\",\n    exercise: \"Susirietimas su kamuolio uždėjimo ant kojų\",\n    series: [\"4x10\"],\n  },\n  {\n    muscleGroup: \"Krutinė\",\n    exercise: \"Spausti laisva štanga nuo lygaus\",\n    series: [\"10 x 10 Kg\", \"8 x 15 Kg\", \"6 x 20 Kg\", \"5 x 25 Kg\"],\n  },\n  {\n    muscleGroup: \"Krūtinė\",\n    exercise: \"Spausti įtvirtinta štanga kampu + suvedimai staklėse\",\n    series: [\"4x10 30 Kg\", \"4x12 20 KG\"],\n  },\n  {\n    muscleGroup: \"Nugara\",\n    exercise: \"Viršutinio torso trauka už galvos\",\n    series: [\"4x12 20 Kg\"],\n  },\n  {\n    muscleGroup: \"Nugara\",\n    exercise: \"Trauka sėdint treniruoklyje plačiai\",\n    series: [\"4x12 20 Kg\"],\n  },\n  {\n    muscleGroup: \"Bicepsas\",\n    exercise: \"Lenkimas treniruoklyje+lenkimas su štanga\",\n    series: [\"4x12 15Kg\", \"4x10 15 Kg\"],\n  },\n];\n","import { SportData } from \"./sport-data\";\n\nexport const data: SportData[] = [\n  {\n    muscleGroup: \"Apšilimas\",\n    exercise: \"Dviratis\",\n    series: [\"5 min\"],\n  },\n  {\n    muscleGroup: \"Presas\",\n    exercise: \"Susirietimai įstrižiniams\",\n    series: [\"4x12\"],\n  },\n  {\n    muscleGroup: \"Kojos\",\n    exercise: \"Lenkimas sėdint\",\n    series: [\"4x15 25 Kg\"],\n  },\n  {\n    muscleGroup: \"Kojos\",\n    exercise: \"Lenkimas gulint\",\n    series: [\"3x12 10 Kg\"],\n  },\n  {\n    muscleGroup: \"Kojos\",\n    exercise: \"Tiesimas sėdint paskui pamažinant svorį\",\n    series: [\"4x12+12 2x10 Kg\"],\n  },\n  {\n    muscleGroup: \"Kojos\",\n    exercise: \"Kojų platforma gulint\",\n    series: [\"4x15 50 Kg\"],\n  },\n  {\n    muscleGroup: \"Kojos\",\n    exercise: \"Suvedimai\",\n    series: [\"4x15 35 Kg\"],\n  },\n  {\n    muscleGroup: \"Blauzdos\",\n    exercise: \"Su koju platforma didinant kas plytele\",\n    series: [\"18x 40 Kg\", \"15x50 Kg\", \"12x60 Kg\", \"10x70 Kg\", \"08x80 Kg\"],\n  },\n];\n","import { SportData } from \"./sport-data\";\n\nexport const data: SportData[] = [\n  {\n    muscleGroup: \"Apšilimas\",\n    exercise: \"Ėjimas\",\n    series: [\"5 min\"],\n  },\n  {\n    muscleGroup: \"Presas\",\n    exercise: \"Susirietimai 1 koja ištiesta, kita sulenkta\",\n    series: [\"4x12\"],\n  },\n  {\n    muscleGroup: \"Nugara\",\n    exercise:\n      \"Viršutinio troso trauka link smakro + Apatinio troso trauka sėdint (plati rankenėlė)\",\n    series: [\"4x12 25 Kg\", \"4x12 16 Kg\"],\n  },\n  {\n    muscleGroup: \"Pečiai\",\n    exercise: \"Mostai su hanteliais per šalis + mostai treniruoklyje\",\n    series: [\"4x15 5 Kg\", \"4x15 15 Kg\"],\n  },\n  {\n    muscleGroup: \"Pečiai\",\n    exercise:\n      \"Spausti įtv štanga iš priekio, vienodu tempu, žemai nuleisti ir siauras paėmimas\",\n    series: [\"4x12 20 Kg\"],\n  },\n  {\n    muscleGroup: \"Tricepsas\",\n    exercise:\n      \"Tiesimas su viršutiniu trosu virve + su raityta štanga gulint nuo kaktos\",\n    series: [\"1x12 25 Kg\", \"3x12 20 Kg\", \"4x12 2x2.5 Kg\"],\n  },\n];\n","import { CSSProperties } from \"react\";\nimport { ActiveLessonStatus } from \"./utils\";\n\nexport const tableStyle: CSSProperties = {\n  borderCollapse: \"collapse\",\n};\n\nconst tableItem: CSSProperties = {\n  border: \"1px solid black\",\n  paddingLeft: \"0.5rem\",\n  paddingRight: \"0.5rem\",\n  paddingTop: \"0.25rem\",\n  paddingBottom: \"0.25rem\",\n  userSelect: \"none\",\n};\n\nconst lessonTime: CSSProperties = {\n  ...tableItem,\n  fontSize: 12,\n};\n\nconst dayOfWeek: CSSProperties = {\n  borderTop: \"1px solid black\",\n  borderLeft: \"1px solid black\",\n  borderRight: \"1px solid black\",\n  padding: \"0.25rem\",\n  textAlign: \"center\",\n  fontSize: 20,\n  fontWeight: \"bold\",\n  background: \"#ABEBC6\",\n  userSelect: \"none\",\n};\n\nexport function getLessonTimeStyle(\n  activeLessonStatus: ActiveLessonStatus,\n  activeDayOfWeek: boolean,\n  index: number\n): CSSProperties {\n  const background = getBackground(activeLessonStatus, activeDayOfWeek, index);\n  return { ...lessonTime, background };\n}\n\nexport function getLectureStyle(\n  activeLessonStatus: ActiveLessonStatus,\n  activeDayOfWeek: boolean,\n  index: number\n) {\n  const background = getBackground(activeLessonStatus, activeDayOfWeek, index);\n  return { ...tableItem, background };\n}\n\nfunction getBackground(\n  activeLessonStatus: ActiveLessonStatus,\n  activeDayOfWeek: boolean,\n  index: number\n) {\n  if (!activeDayOfWeek) {\n    return \"white\";\n  }\n\n  const activeLesson = activeLessonStatus.activeLessonIndex === index;\n  if (!activeLesson) {\n    return \"white\";\n  }\n\n  if (activeLessonStatus.status === \"Active\") {\n    return \"lightgreen\";\n  }\n  return \"lightyellow\";\n}\n\nexport function getDayOfWeekStyle(activeDayOfWeek: boolean): CSSProperties {\n  const background = activeDayOfWeek ? \"#ABEBC6\" : \"lightgray\";\n  return { ...dayOfWeek, background };\n}\n","export interface LessonTime {\n  startHour: number;\n  startMinute: number;\n  endHour: number;\n  endMinute: number;\n}\n\nexport const lessonTimes: LessonTime[] = [\n  { startHour: 8, startMinute: 0, endHour: 8, endMinute: 45 },\n  { startHour: 8, startMinute: 55, endHour: 9, endMinute: 40 },\n  { startHour: 9, startMinute: 50, endHour: 10, endMinute: 35 },\n  { startHour: 11, startMinute: 5, endHour: 11, endMinute: 50 },\n  { startHour: 12, startMinute: 10, endHour: 12, endMinute: 55 },\n  { startHour: 13, startMinute: 5, endHour: 13, endMinute: 55 },\n];\n\nexport function makeLessonTime(lessonTime: LessonTime) {\n  const { startHour, endHour, startMinute, endMinute } = lessonTime;\n  return `${startHour}:${formatMinute(startMinute)} - ${endHour}:${formatMinute(\n    endMinute\n  )}`;\n}\n\nfunction formatMinute(minute: number): string {\n  return minute > 9 ? `${minute}` : `0${minute}`;\n}\n\nexport function getDayOfWeek(dayOfWeek: number): string {\n  switch (dayOfWeek) {\n    case 1:\n      return \"Pirmadienis\";\n    case 2:\n      return \"Antradienis\";\n    case 3:\n      return \"Trečiadienis\";\n    case 4:\n      return \"Ketvirtadienis\";\n    case 5:\n      return \"Penktadienis\";\n    default:\n      return \"\";\n  }\n}\n\nexport interface ActiveLessonStatus {\n  activeLessonIndex: number;\n  status: \"Active\" | \"Inactive\";\n  timeLeft?: string;\n}\n\nfunction getLessonStart(lesson: LessonTime, now: Date): number {\n  return new Date(\n    now.getFullYear(),\n    now.getMonth(),\n    now.getDate(),\n    lesson.startHour,\n    lesson.startMinute\n  ).getTime();\n}\n\nfunction getLessonEnd(lesson: LessonTime, now: Date): number {\n  return new Date(\n    now.getFullYear(),\n    now.getMonth(),\n    now.getDate(),\n    lesson.endHour,\n    lesson.endMinute\n  ).getTime();\n}\n\nexport function getActiveLessonStatus(now: Date): ActiveLessonStatus {\n  for (let index = 0; index < lessonTimes.length; index++) {\n    const lessonTime = lessonTimes[index];\n    const lessonStart = getLessonStart(lessonTime, now);\n    const lessonEnd = getLessonEnd(lessonTime, now);\n\n    const time = now.getTime();\n    if (time >= lessonStart && time <= lessonEnd) {\n      const remainMinutes = (time - lessonEnd) / 60000;\n      const timeLeft = `(remain ${remainMinutes} minutes)`;\n      return { activeLessonIndex: index, status: \"Active\", timeLeft };\n    }\n\n    if (time < lessonStart) {\n      const remainMinutes = Math.round((lessonStart - time) / 60000);\n      const timeLeft = `(after ${remainMinutes} minutes)`;\n      return { activeLessonIndex: index, status: \"Inactive\", timeLeft };\n    }\n\n    if (index < lessonTimes.length - 1) {\n      const lessonAfter = lessonTimes[index + 1];\n      const lessonAfterStart = getLessonStart(lessonAfter, now);\n      if (time < lessonAfterStart) {\n        const remainMinutes = Math.round((lessonAfterStart - time) / 60000);\n        const timeLeft = `(after ${remainMinutes} minutes)`;\n        return { activeLessonIndex: index + 1, status: \"Inactive\", timeLeft };\n      }\n    }\n  }\n  return { activeLessonIndex: -1, status: \"Inactive\" };\n}\n","import { getLectureStyle, getLessonTimeStyle } from \"./days-lessons.style\";\nimport { ActiveLessonStatus, lessonTimes, makeLessonTime } from \"./utils\";\n\ninterface LessonRowProps {\n  activeLessonStatus: ActiveLessonStatus;\n  index: number;\n  activeDayOfWeek: boolean;\n  lecture: string;\n}\n\nexport const LessonRow = ({\n  index,\n  activeLessonStatus,\n  activeDayOfWeek,\n  lecture,\n}: LessonRowProps) => {\n  const lessonTime = lessonTimes[index];\n\n  const lectureTimeStyle = getLessonTimeStyle(\n    activeLessonStatus,\n    activeDayOfWeek,\n    index\n  );\n  const lectureStyle = getLectureStyle(\n    activeLessonStatus,\n    activeDayOfWeek,\n    index\n  );\n\n  const lectureTime = makeLessonTime(lessonTime);\n  const remainTime =\n    activeLessonStatus.activeLessonIndex === index &&\n    activeDayOfWeek &&\n    activeLessonStatus.timeLeft ? (\n      <span\n        style={{\n          color: \"red\",\n        }}\n      >{` ${activeLessonStatus.timeLeft}`}</span>\n    ) : undefined;\n  return (\n    <tr key={index}>\n      <td style={lectureTimeStyle}>{lectureTime}</td>\n      <td style={lectureStyle}>\n        {lecture}\n        {remainTime}\n      </td>\n    </tr>\n  );\n};\n","import { getDayOfWeekStyle, tableStyle } from \"./days-lessons.style\";\nimport { LessonRow } from \"./lesson-row\";\nimport { ActiveLessonStatus, getDayOfWeek } from \"./utils\";\n\nexport interface LessonData {\n  dayOfWeek: number;\n  lessons: string[];\n}\n\ninterface DaysLessonsProps {\n  lessons: LessonData;\n  activeLessonStatus: ActiveLessonStatus;\n  activeDayOfWeek: boolean;\n}\n\nexport const DaysLessons = ({\n  lessons,\n  activeLessonStatus,\n  activeDayOfWeek,\n}: DaysLessonsProps) => {\n  const activeLessons = lessons.lessons.map((lecture, index) => (\n    <LessonRow\n      activeDayOfWeek={activeDayOfWeek}\n      activeLessonStatus={activeLessonStatus}\n      index={index}\n      lecture={lecture}\n    />\n  ));\n\n  const dayOfWeek = getDayOfWeek(lessons.dayOfWeek);\n  const dayOfWeekStyle = getDayOfWeekStyle(activeDayOfWeek);\n  return (\n    <div style={{ width: \"fit-content\" }}>\n      <div style={dayOfWeekStyle}>{dayOfWeek}</div>\n      <table style={tableStyle}>\n        <tbody>{activeLessons}</tbody>\n      </table>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { DaysLessons, LessonData } from \"../days-lessons/days-lessons\";\nimport { getActiveLessonStatus } from \"../days-lessons/utils\";\n\ninterface WeekLessonsProps {\n  monday: LessonData;\n  tuesday: LessonData;\n  wednesday: LessonData;\n  thursday: LessonData;\n  friday: LessonData;\n}\n\nexport const WeekLessons = ({\n  monday,\n  tuesday,\n  wednesday,\n  thursday,\n  friday,\n}: WeekLessonsProps) => {\n  // const n = new Date();\n  // const now = new Date(n.getFullYear(), n.getMonth(), n.getDate(), 10, 45);\n  const now = new Date();\n  const dow = now.getDay();\n  const [activeLessonStatus, setActiveLessonStatus] = useState(\n    getActiveLessonStatus(now)\n  );\n\n  useEffect(() => {\n    setInterval(() => {\n      const newNow = new Date();\n      const activeLesson = getActiveLessonStatus(newNow);\n      setActiveLessonStatus(activeLesson);\n      console.log(\"time update event\");\n    }, 30000);\n  }, []);\n\n  return (\n    <div\n      style={{\n        marginLeft: \"0.5rem\",\n        marginTop: \"0.5rem\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gridRowGap: \"10px\",\n        gridColumnGap: \"10px\",\n      }}\n    >\n      <DaysLessons\n        lessons={monday}\n        activeLessonStatus={activeLessonStatus}\n        activeDayOfWeek={dow === monday.dayOfWeek}\n      />\n      <DaysLessons\n        lessons={tuesday}\n        activeLessonStatus={activeLessonStatus}\n        activeDayOfWeek={dow === tuesday.dayOfWeek}\n      />\n      <DaysLessons\n        lessons={wednesday}\n        activeLessonStatus={activeLessonStatus}\n        activeDayOfWeek={dow === wednesday.dayOfWeek}\n      />\n      <DaysLessons\n        lessons={thursday}\n        activeLessonStatus={activeLessonStatus}\n        activeDayOfWeek={dow === thursday.dayOfWeek}\n      />\n      <DaysLessons\n        lessons={friday}\n        activeLessonStatus={activeLessonStatus}\n        activeDayOfWeek={dow === friday.dayOfWeek}\n      />\n    </div>\n  );\n};\n","import { LessonData } from \"../../components/days-lessons/days-lessons\";\nimport { WeekLessons } from \"../../components/week-lessons/week-lessons\";\n\nconst monday: LessonData = {\n  dayOfWeek: 1,\n  lessons: [\n    \"Lietuvių kalba\",\n    \"Muzika\",\n    \"Lietuvių kalba\",\n    \"Matematika\",\n    \"Pasaulio pažinimas\",\n  ],\n};\n\nconst tuesday: LessonData = {\n  dayOfWeek: 2,\n  lessons: [\n    \"Lietuvių kalba\",\n    \"Kūno kultūra\",\n    \"Lietuvių kalba\",\n    \"Matematika\",\n    \"Dailė ir technologijos\",\n  ],\n};\n\nconst wednesday: LessonData = {\n  dayOfWeek: 3,\n  lessons: [\n    \"Lietuvių kalba\",\n    \"Kūno kultūra\",\n    \"Lietuvių kalba\",\n    \"Matematika\",\n    \"Etika/Tikyba\",\n  ],\n};\n\nconst thursday: LessonData = {\n  dayOfWeek: 4,\n  lessons: [\"Lietuvių kalba\", \"Teatras\", \"Matematika\", \"Pasaulio pažinimas\"],\n};\n\nconst friday: LessonData = {\n  dayOfWeek: 5,\n  lessons: [\n    \"Lietuvių kalba\",\n    \"Kūno kultūra\",\n    \"Dailė ir technologijos\",\n    \"Muzika\",\n  ],\n};\n\nexport const DariusPage = () => {\n  return (\n    <WeekLessons\n      monday={monday}\n      tuesday={tuesday}\n      wednesday={wednesday}\n      thursday={thursday}\n      friday={friday}\n    />\n  );\n};\n","import { LessonData } from \"../../components/days-lessons/days-lessons\";\nimport { WeekLessons } from \"../../components/week-lessons/week-lessons\";\n\nconst monday: LessonData = {\n  dayOfWeek: 1,\n  lessons: [\n    \"Fizinis ugdymas\",\n    \"Anglų kalba\",\n    \"Matematika\",\n    \"Lietuvių kalba\",\n    \"Pasaulio pažinimas\",\n  ],\n};\n\nconst tuesday: LessonData = {\n  dayOfWeek: 2,\n  lessons: [\n    \"Lietuvių kalba\",\n    \"Matematika\",\n    \"Lietuvių kalba\",\n    \"Muzika\",\n    \"Dailė ir technologijos\",\n  ],\n};\n\nconst wednesday: LessonData = {\n  dayOfWeek: 3,\n  lessons: [\n    \"Etika/Tikyba\",\n    \"Anglų kalba\",\n    \"Matematika\",\n    \"Lietuvių kalba\",\n    \"Lietuvių kalba\",\n  ],\n};\n\nconst thursday: LessonData = {\n  dayOfWeek: 4,\n  lessons: [\n    \"Lietuvių kalba\",\n    \"Matematika\",\n    \"Lietuvių kalba\",\n    \"Pasaulio pažinimas\",\n    \"Dailė ir technologijos\",\n  ],\n};\n\nconst friday: LessonData = {\n  dayOfWeek: 5,\n  lessons: [\n    \"Lietuvių kalba\",\n    \"Matematika\",\n    \"Lietuvių kalba\",\n    \"Muzika\",\n    \"Fizinis ugdymas\",\n  ],\n};\n\nexport const GabijaPage = () => (\n  <WeekLessons\n    monday={monday}\n    tuesday={tuesday}\n    wednesday={wednesday}\n    thursday={thursday}\n    friday={friday}\n  />\n);\n","import { CSSProperties } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst styling: CSSProperties = {\n  marginLeft: \"0.5rem\",\n  padding: \"1rem\",\n  border: \"1px solid black\",\n  background: \"lightgreen\",\n  borderRadius: \"5px\",\n  userSelect: \"none\",\n};\n\nconst links = [\"Darius\", \"Gabija\", \"Audrius\"];\n\nexport const Navigation = () => {\n  const history = useHistory();\n  return (\n    <div style={{ marginTop: \"1.5rem\" }}>\n      {links.map((r) => (\n        <span style={styling} onClick={() => history.push(`/${r}`)}>\n          {r}\n        </span>\n      ))}\n    </div>\n  );\n};\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AudriusPage } from \"./pages/audrius/audrius-page\";\nimport { DariusPage } from \"./pages/darius/darius-page\";\nimport { GabijaPage } from \"./pages/gabija/gabija-page\";\nimport { Navigation } from \"./pages/navigation\";\n\nfunction Notfound() {\n  return <div>Page not found</div>;\n}\n\nexport default function App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Navigation />\n        </Route>\n        <Route path=\"/Darius\">\n          <DariusPage />\n        </Route>\n        <Route path=\"/Gabija\">\n          <GabijaPage />\n        </Route>\n        <Route path=\"/Audrius\">\n          <AudriusPage />\n        </Route>\n        <Route path={\"*\"}>\n          <Notfound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}